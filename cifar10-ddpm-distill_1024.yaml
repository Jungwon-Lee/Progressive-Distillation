model:
  base_learning_rate: 3.0e-4   # set to target_lr by starting main.py with '--scale_lr False'
  target: ldm.models.diffusion.ddpm.ProgressiveDiffusion
  params:
    beta_schedule: cosine
    linear_start: 0.0001 # 0.0001 / 4
    linear_end: 0.02 # 0.02 / 4
    log_every_t: 200
    timesteps: 1024
    loss_type: l2
    image_size: 32
    channels: 3
    monitor: 'val/loss_simple_ema'
    parameterization: "v"

    scheduler_config: # 10000 warmup steps
      target: ldm.lr_scheduler.SimpleLRScheduler
      params:
        max_step: 50000

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32
        in_channels: 3
        out_channels: 3
        model_channels: 256
        attention_resolutions: [ 2, 4 ]   # 32, 16, 8, 4
        num_res_blocks: 3
        channel_mult: [ 1,1,1 ]  # 32, 16, 8, 4, 2
        dropout: 0.2
        num_heads: 1
        use_scale_shift_norm: False
        resblock_updown: False

    teacher_config:
      target: ldm.models.diffusion.ddpm.DDPM
      params:
        beta_schedule: cosine
        linear_start: 0.0001 # 0.0001 / 4
        linear_end: 0.02 # 0.02 / 4
        log_every_t: 200
        timesteps: 2048
        loss_type: l2
        image_size: 32
        channels: 3
        monitor: 'val/loss_simple_ema'
        ckpt_path: /NAS/LJW/progressive/teacher_cosine_2048_end.ckpt
        parameterization: "v"

        unet_config:
          target: ldm.modules.diffusionmodules.openaimodel.UNetModel
          params:
            image_size: 32
            in_channels: 3
            out_channels: 3
            model_channels: 256
            attention_resolutions: [ 2, 4 ]   # 32, 16, 8, 4
            num_res_blocks: 3
            channel_mult: [ 1,1,1 ]  # 32, 16, 8, 4, 2
            dropout: 0.2
            num_heads: 1
            use_scale_shift_norm: False
            resblock_updown: False

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 128 # 128
    num_workers: 8
    wrap: False
    train:
      target: ldm.data.cifar10.CIFAR10_Train
      params:
        root: '/SSD'
    validation:
      target: ldm.data.cifar10.CIFAR10_Validation
      params:
        root: '/SSD'

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 1000
        max_images: 4
        increase_log_steps: False


  trainer:
    # benchmark: True
    deterministic: True
    max_steps: 50000
    gpus: 0,